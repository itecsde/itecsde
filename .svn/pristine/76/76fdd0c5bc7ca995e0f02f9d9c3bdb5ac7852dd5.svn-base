require 'thread'

class Annotator
   def initialize wikipediator_ip
      @wikipediator_ip = wikipediator_ip
      @state = "running"
   end

   def run
      Thread.new do
            Broker.instance.say "Annotator #{@wikipediator_ip}.run checkpoint 1"
            @queue = Broker.instance.queue
            Broker.instance.say "Annotator.run checkpoint 2"
            loop do
               begin
                  if @state == "running"
                     task = @queue.pop
                     Broker.instance.say "Consumed a task named #{task.method.to_s} from queue with #{@queue.size} elements..."
                     resource = task.element
      
                     puts "Proceding to annotate resource: "+ resource.class.to_s + " " + resource.id.to_s
                     # Gets its manual tags
                     manual_tags = Array.new
                     resource.taggable_tag_annotations.where(:type_tag => "human").each do |annotation|
                        manual_tags << annotation.tag.name
                     end
      
                     # Deletes previous semantic annotations
                     resource.taggable_tag_annotations.where(:type_tag => ["automatic", "automatic_from_human"]).each do |annotation|
                        annotation.destroy
                     end
      
                     # Annotates the resource again
                     if resource.info_to_wikify == nil
                     resource.info_to_wikify = resource.description
                     end
                     resource.extract_wikitopics(resource.name, resource.info_to_wikify, manual_tags, @wikipediator_ip)
                     puts "Resource annotated successfully"
                  else
                     sleep 5
                  end   
               rescue Exception => e
                  Broker.instance.say e.message
                  Broker.instance.say e.backtrace.inspect
                  Broker.instance.say "Exception in Annotator.run #{@wikipediator_ip}"
               end                 
            end
      end
      Thread.new do 
         loop do
            begin
               sleep 5
               url = "http://" + @wikipediator_ip + ":8080/wikipediaminer/services/wikify?source=" + "helloworld"
               page = Nokogiri::XML(open(url))
               @state = "running"
            rescue Exception => e
               Broker.instance.say e.message
               Broker.instance.say e.backtrace.inspect
               @state = "down"
               Broker.instance.say "Wikipediator #{@wikipediator_ip} is DOWN!"
            end
         end
      end
   end
end
