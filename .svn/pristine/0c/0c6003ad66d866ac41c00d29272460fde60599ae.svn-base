class User < ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :token_authenticatable, :confirmable,
  # :lockable, :timeoutable and :omniauthable
  
  #after_create :initialize_boards
  
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable


  searchable do
    text :email
  end

  # Setup accessible (or protected) attributes for your model
  attr_accessible :email, :password, :password_confirmation, :remember_me, :first_name, :last_name, :preferred_language
  
  has_many :comments
  
  has_many :group_user_annotations
  has_many :groups, :through => :group_user_annotations
  
  # Relationships with Ownable elements
  has_many :activities_owned, :class_name => "Activity", as: :owner
  has_many :activity_sequences_owned, :class_name => "ActivitySequence", as: :owner
  has_many :guides_owned, :class_name => "Guide", as: :owner
  
  has_many :applications_created, :class_name => "Application", :foreign_key => "creator_id"
  has_many :events_created, :class_name => "Event", :foreign_key => "creator_id"
  has_many :people_created, :class_name => "Person", :foreign_key => "creator_id"
  has_many :lectures_created, :class_name => "Lecture", :foreign_key => "creator_id"
  has_many :sites_created, :class_name => "Site", :foreign_key => "creator_id"
  has_many :documentaries_created, :class_name => "Documentary", :foreign_key => "creator_id"
  has_many :courses_created, :class_name => "Course", :foreign_key => "creator_id"  
  has_many :articles_created, :class_name => "Article", :foreign_key => "creator_id"
  has_many :lres_created, :class_name => "Lre", :foreign_key => "creator_id"
  has_many :posts_created, :class_name => "Post", :foreign_key => "creator_id" 
  has_many :slideshows_created, :class_name => "Slideshow", :foreign_key => "creator_id"      

  
  has_many :scenarios_created, :class_name => "Scenario", :foreign_key => "creator_id"
  has_many :activities_created, :class_name => "Activity", :foreign_key => "creator_id"
  has_many :activity_sequences_created, :class_name => "ActivitySequence", :foreign_key => "creator_id"
  has_many :guides_created, :class_name => "Guide", :foreign_key => "creator_id" 
  has_many :experiences_created, :class_name => "Experience", :foreign_key => "creator_id"  
 
  
  has_many :circumstances, :class_name => "Circumstance", :foreign_key => "user_id"
  
  
  # Relationship with bookmarked elements
  has_many :bookmark_user_element_annotations, :dependent => :destroy
  has_many :bookmarked_events, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Event"
  has_many :bookmarked_people, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Person"
  has_many :bookmarked_applications, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Application"
  has_many :bookmarked_lectures, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Lecture"
  has_many :bookmarked_sites, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Site"
  has_many :bookmarked_documentaries, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Documentary"
  has_many :bookmarked_courses, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Course"
  has_many :bookmarked_articles, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Article"
  has_many :bookmarked_lres, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Lre"
  has_many :bookmarked_posts, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Post"
  has_many :bookmarked_slideshows, :through => :bookmark_user_element_annotations, :source => :element,:source_type =>"Slideshow"


  
  #Avatar
  attr_accessible :avatar, :circumstances
  has_attached_file :avatar, :styles => { :original => "300x300>", :medium => "200x200>", :thumb => "30x30>" }, :default_url => "/images/user/:style/user.png"
  
  def initialize_boards
    puts self.email
    itec = User.first
    itec.activities_owned.each do |activity|
      cloned_activity = activity.clone_with_associations
      self.activities_owned << cloned_activity
    end
    
    
    if itec.activity_sequences_owned != nil && itec.activity_sequences_owned.length >= 1
      itec.activity_sequences_owned.each do |sequence|
        new_sequence = sequence.clone_with_associations
        new_sequence.activity_instances.each do |step|
          self.activities_owned.each do |activity|
            if step.activity.is_equal_to activity
              step.activity = activity
              step.save
            end
          end
        end
        new_sequence.save
        self.activity_sequences_owned << new_sequence
      end  
    end
    #self.save
  end
end
